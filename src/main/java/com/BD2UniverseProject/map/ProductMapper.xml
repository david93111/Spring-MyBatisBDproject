<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.BD2UniverseProject.map.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.BD2UniverseProject.model.Product" >
    <id column="PRODUCT_ID" property="PRODUCT_ID" jdbcType="DECIMAL" />
    <result column="PRODUCT_NAME" property="PRODUCT_NAME" jdbcType="VARCHAR" />
    <result column="PRODUCT_CODE" property="PRODUCT_CODE" jdbcType="VARCHAR" />
    <result column="PRODUCT_PRICE" property="PRODUCT_PRICE" jdbcType="DECIMAL" />
    <result column="PRODUCT_COST" property="PRODUCT_COST" jdbcType="DECIMAL" />
    <result column="PRODUCT_DESCRIPTION" property="PRODUCT_DESCRIPTION" jdbcType="VARCHAR" />
    <result column="INVENTORY" property="INVENTORY" jdbcType="DECIMAL" />
    <result column="PROVIDER_ID" property="PROVIDER_ID" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PRODUCT_ID, PRODUCT_NAME, PRODUCT_CODE, PRODUCT_PRICE, PRODUCT_COST, PRODUCT_DESCRIPTION, 
    INVENTORY, PROVIDER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.BD2UniverseProject.model.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal" >
    select 
    <include refid="Base_Column_List" />
    from PRODUCT
    where PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal" >
    delete from PRODUCT
    where PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.BD2UniverseProject.model.ProductExample" >
    delete from PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.BD2UniverseProject.model.Product" >
    insert into PRODUCT (PRODUCT_ID, PRODUCT_NAME, PRODUCT_CODE, 
      PRODUCT_PRICE, PRODUCT_COST, PRODUCT_DESCRIPTION, 
      INVENTORY, PROVIDER_ID)
    values (#{PRODUCT_ID,jdbcType=DECIMAL}, #{PRODUCT_NAME,jdbcType=VARCHAR}, #{PRODUCT_CODE,jdbcType=VARCHAR}, 
      #{PRODUCT_PRICE,jdbcType=DECIMAL}, #{PRODUCT_COST,jdbcType=DECIMAL}, #{PRODUCT_DESCRIPTION,jdbcType=VARCHAR}, 
      #{INVENTORY,jdbcType=DECIMAL}, #{PROVIDER_ID,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.BD2UniverseProject.model.Product" >
    insert into PRODUCT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="PRODUCT_ID != null" >
        PRODUCT_ID,
      </if>
      <if test="PRODUCT_NAME != null" >
        PRODUCT_NAME,
      </if>
      <if test="PRODUCT_CODE != null" >
        PRODUCT_CODE,
      </if>
      <if test="PRODUCT_PRICE != null" >
        PRODUCT_PRICE,
      </if>
      <if test="PRODUCT_COST != null" >
        PRODUCT_COST,
      </if>
      <if test="PRODUCT_DESCRIPTION != null" >
        PRODUCT_DESCRIPTION,
      </if>
      <if test="INVENTORY != null" >
        INVENTORY,
      </if>
      <if test="PROVIDER_ID != null" >
        PROVIDER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="PRODUCT_ID != null" >
        #{PRODUCT_ID,jdbcType=DECIMAL},
      </if>
      <if test="PRODUCT_NAME != null" >
        #{PRODUCT_NAME,jdbcType=VARCHAR},
      </if>
      <if test="PRODUCT_CODE != null" >
        #{PRODUCT_CODE,jdbcType=VARCHAR},
      </if>
      <if test="PRODUCT_PRICE != null" >
        #{PRODUCT_PRICE,jdbcType=DECIMAL},
      </if>
      <if test="PRODUCT_COST != null" >
        #{PRODUCT_COST,jdbcType=DECIMAL},
      </if>
      <if test="PRODUCT_DESCRIPTION != null" >
        #{PRODUCT_DESCRIPTION,jdbcType=VARCHAR},
      </if>
      <if test="INVENTORY != null" >
        #{INVENTORY,jdbcType=DECIMAL},
      </if>
      <if test="PROVIDER_ID != null" >
        #{PROVIDER_ID,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.BD2UniverseProject.model.ProductExample" resultType="java.lang.Integer" >
    select count(*) from PRODUCT
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update PRODUCT
    <set >
      <if test="record.PRODUCT_ID != null" >
        PRODUCT_ID = #{record.PRODUCT_ID,jdbcType=DECIMAL},
      </if>
      <if test="record.PRODUCT_NAME != null" >
        PRODUCT_NAME = #{record.PRODUCT_NAME,jdbcType=VARCHAR},
      </if>
      <if test="record.PRODUCT_CODE != null" >
        PRODUCT_CODE = #{record.PRODUCT_CODE,jdbcType=VARCHAR},
      </if>
      <if test="record.PRODUCT_PRICE != null" >
        PRODUCT_PRICE = #{record.PRODUCT_PRICE,jdbcType=DECIMAL},
      </if>
      <if test="record.PRODUCT_COST != null" >
        PRODUCT_COST = #{record.PRODUCT_COST,jdbcType=DECIMAL},
      </if>
      <if test="record.PRODUCT_DESCRIPTION != null" >
        PRODUCT_DESCRIPTION = #{record.PRODUCT_DESCRIPTION,jdbcType=VARCHAR},
      </if>
      <if test="record.INVENTORY != null" >
        INVENTORY = #{record.INVENTORY,jdbcType=DECIMAL},
      </if>
      <if test="record.PROVIDER_ID != null" >
        PROVIDER_ID = #{record.PROVIDER_ID,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update PRODUCT
    set PRODUCT_ID = #{record.PRODUCT_ID,jdbcType=DECIMAL},
      PRODUCT_NAME = #{record.PRODUCT_NAME,jdbcType=VARCHAR},
      PRODUCT_CODE = #{record.PRODUCT_CODE,jdbcType=VARCHAR},
      PRODUCT_PRICE = #{record.PRODUCT_PRICE,jdbcType=DECIMAL},
      PRODUCT_COST = #{record.PRODUCT_COST,jdbcType=DECIMAL},
      PRODUCT_DESCRIPTION = #{record.PRODUCT_DESCRIPTION,jdbcType=VARCHAR},
      INVENTORY = #{record.INVENTORY,jdbcType=DECIMAL},
      PROVIDER_ID = #{record.PROVIDER_ID,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.BD2UniverseProject.model.Product" >
    update PRODUCT
    <set >
      <if test="PRODUCT_NAME != null" >
        PRODUCT_NAME = #{PRODUCT_NAME,jdbcType=VARCHAR},
      </if>
      <if test="PRODUCT_CODE != null" >
        PRODUCT_CODE = #{PRODUCT_CODE,jdbcType=VARCHAR},
      </if>
      <if test="PRODUCT_PRICE != null" >
        PRODUCT_PRICE = #{PRODUCT_PRICE,jdbcType=DECIMAL},
      </if>
      <if test="PRODUCT_COST != null" >
        PRODUCT_COST = #{PRODUCT_COST,jdbcType=DECIMAL},
      </if>
      <if test="PRODUCT_DESCRIPTION != null" >
        PRODUCT_DESCRIPTION = #{PRODUCT_DESCRIPTION,jdbcType=VARCHAR},
      </if>
      <if test="INVENTORY != null" >
        INVENTORY = #{INVENTORY,jdbcType=DECIMAL},
      </if>
      <if test="PROVIDER_ID != null" >
        PROVIDER_ID = #{PROVIDER_ID,jdbcType=DECIMAL},
      </if>
    </set>
    where PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.BD2UniverseProject.model.Product" >
    update PRODUCT
    set PRODUCT_NAME = #{PRODUCT_NAME,jdbcType=VARCHAR},
      PRODUCT_CODE = #{PRODUCT_CODE,jdbcType=VARCHAR},
      PRODUCT_PRICE = #{PRODUCT_PRICE,jdbcType=DECIMAL},
      PRODUCT_COST = #{PRODUCT_COST,jdbcType=DECIMAL},
      PRODUCT_DESCRIPTION = #{PRODUCT_DESCRIPTION,jdbcType=VARCHAR},
      INVENTORY = #{INVENTORY,jdbcType=DECIMAL},
      PROVIDER_ID = #{PROVIDER_ID,jdbcType=DECIMAL}
    where PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL}
  </update>
</mapper>