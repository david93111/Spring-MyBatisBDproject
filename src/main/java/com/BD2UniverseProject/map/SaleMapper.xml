<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.BD2UniverseProject.map.SaleMapper">
	<resultMap id="BaseResultMap" type="com.BD2UniverseProject.model.Sale">
		<id column="SALE_ID" property="SALE_ID" jdbcType="DECIMAL" />
		<result column="TOTAL_PRICE" property="TOTAL_PRICE" jdbcType="DECIMAL" />
		<result column="SALE_DATE" property="SALE_DATE" jdbcType="TIMESTAMP" />
		<result column="SALE_ADDRESS" property="SALE_ADDRESS" jdbcType="VARCHAR" />
		<result column="SALE_STATUS" property="SALE_STATUS" jdbcType="DECIMAL" />
		<result column="CLIENT_ID" property="CLIENT_ID" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		SALE_ID, TOTAL_PRICE, SALE_DATE, SALE_ADDRESS, SALE_STATUS, CLIENT_ID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.BD2UniverseProject.model.SaleExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from SALE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.math.BigDecimal">
		select
		<include refid="Base_Column_List" />
		from SALE
		where SALE_ID = #{SALE_ID,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
		delete from SALE
		where SALE_ID = #{SALE_ID,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByExample" parameterType="com.BD2UniverseProject.model.SaleExample">
		delete from SALE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.BD2UniverseProject.model.Sale">
		insert into SALE (SALE_ID, TOTAL_PRICE, SALE_DATE,
		SALE_ADDRESS, SALE_STATUS, CLIENT_ID
		)
		values (#{SALE_ID,jdbcType=DECIMAL}, #{TOTAL_PRICE,jdbcType=DECIMAL},
		#{SALE_DATE,jdbcType=TIMESTAMP},
		#{SALE_ADDRESS,jdbcType=VARCHAR}, #{SALE_STATUS,jdbcType=DECIMAL}, #{CLIENT_ID,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.BD2UniverseProject.model.Sale">
		insert into SALE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="SALE_ID != null">
				SALE_ID,
			</if>
			<if test="TOTAL_PRICE != null">
				TOTAL_PRICE,
			</if>
			<if test="SALE_DATE != null">
				SALE_DATE,
			</if>
			<if test="SALE_ADDRESS != null">
				SALE_ADDRESS,
			</if>
			<if test="SALE_STATUS != null">
				SALE_STATUS,
			</if>
			<if test="CLIENT_ID != null">
				CLIENT_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="SALE_ID != null">
				#{SALE_ID,jdbcType=DECIMAL},
			</if>
			<if test="TOTAL_PRICE != null">
				#{TOTAL_PRICE,jdbcType=DECIMAL},
			</if>
			<if test="SALE_DATE != null">
				#{SALE_DATE,jdbcType=TIMESTAMP},
			</if>
			<if test="SALE_ADDRESS != null">
				#{SALE_ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="SALE_STATUS != null">
				#{SALE_STATUS,jdbcType=DECIMAL},
			</if>
			<if test="CLIENT_ID != null">
				#{CLIENT_ID,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.BD2UniverseProject.model.SaleExample"
		resultType="java.lang.Integer">
		select count(*) from SALE
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update SALE
		<set>
			<if test="record.SALE_ID != null">
				SALE_ID = #{record.SALE_ID,jdbcType=DECIMAL},
			</if>
			<if test="record.TOTAL_PRICE != null">
				TOTAL_PRICE = #{record.TOTAL_PRICE,jdbcType=DECIMAL},
			</if>
			<if test="record.SALE_DATE != null">
				SALE_DATE = #{record.SALE_DATE,jdbcType=TIMESTAMP},
			</if>
			<if test="record.SALE_ADDRESS != null">
				SALE_ADDRESS = #{record.SALE_ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="record.SALE_STATUS != null">
				SALE_STATUS = #{record.SALE_STATUS,jdbcType=DECIMAL},
			</if>
			<if test="record.CLIENT_ID != null">
				CLIENT_ID = #{record.CLIENT_ID,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update SALE
		set SALE_ID = #{record.SALE_ID,jdbcType=DECIMAL},
		TOTAL_PRICE = #{record.TOTAL_PRICE,jdbcType=DECIMAL},
		SALE_DATE = #{record.SALE_DATE,jdbcType=TIMESTAMP},
		SALE_ADDRESS = #{record.SALE_ADDRESS,jdbcType=VARCHAR},
		SALE_STATUS = #{record.SALE_STATUS,jdbcType=DECIMAL},
		CLIENT_ID = #{record.CLIENT_ID,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.BD2UniverseProject.model.Sale">
		update SALE
		<set>
			<if test="TOTAL_PRICE != null">
				TOTAL_PRICE = #{TOTAL_PRICE,jdbcType=DECIMAL},
			</if>
			<if test="SALE_DATE != null">
				SALE_DATE = #{SALE_DATE,jdbcType=TIMESTAMP},
			</if>
			<if test="SALE_ADDRESS != null">
				SALE_ADDRESS = #{SALE_ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="SALE_STATUS != null">
				SALE_STATUS = #{SALE_STATUS,jdbcType=DECIMAL},
			</if>
			<if test="CLIENT_ID != null">
				CLIENT_ID = #{CLIENT_ID,jdbcType=DECIMAL},
			</if>
		</set>
		where SALE_ID = #{SALE_ID,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.BD2UniverseProject.model.Sale">
		update SALE
		set TOTAL_PRICE = #{TOTAL_PRICE,jdbcType=DECIMAL},
		SALE_DATE = #{SALE_DATE,jdbcType=TIMESTAMP},
		SALE_ADDRESS = #{SALE_ADDRESS,jdbcType=VARCHAR},
		SALE_STATUS = #{SALE_STATUS,jdbcType=DECIMAL},
		CLIENT_ID = #{CLIENT_ID,jdbcType=DECIMAL}
		where SALE_ID = #{SALE_ID,jdbcType=DECIMAL}
	</update>
	<select id="selectSalesTable" resultType="java.util.Map">
	select 
  		sl.SALE_ID,TO_CHAR(sl.SALE_DATE, 'DD-MON-YYYY HH24:MI') as SALE_DATE,sl.TOTAL_PRICE ,st.STATUS_NAME,cl.FIRST_NAME,cl.SECOND_NAME,cl.FIRST_LASTNAME,cl.SECOND_LASTNAME
	from sale sl
	inner join SALE_STATUS st on sl.SALE_STATUS = st.SALE_STATUS_ID
	inner join client cl on sl.CLIENT_ID = cl.CLIENT_ID
	
	</select>
</mapper>