<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.BD2UniverseProject.map.SaleDetailMapper">
	<resultMap id="BaseResultMap" type="com.BD2UniverseProject.model.SaleDetail">
		<id column="SALE_DETAIL_ID" property="SALE_DETAIL_ID" jdbcType="DECIMAL" />
		<result column="PRICE" property="PRICE" jdbcType="DECIMAL" />
		<result column="COST" property="COST" jdbcType="DECIMAL" />
		<result column="QUANTITY" property="QUANTITY" jdbcType="DECIMAL" />
		<result column="SALE_ID" property="SALE_ID" jdbcType="DECIMAL" />
		<result column="PRODUCT_ID" property="PRODUCT_ID" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		SALE_DETAIL_ID, PRICE, COST, QUANTITY, SALE_ID, PRODUCT_ID
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.BD2UniverseProject.model.SaleDetailExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from SALE_DETAIL
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.math.BigDecimal">
		select
		<include refid="Base_Column_List" />
		from SALE_DETAIL
		where SALE_DETAIL_ID = #{SALE_DETAIL_ID,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
		delete from SALE_DETAIL
		where SALE_DETAIL_ID = #{SALE_DETAIL_ID,jdbcType=DECIMAL}
	</delete>
	<delete id="deleteByExample" parameterType="com.BD2UniverseProject.model.SaleDetailExample">
		delete from SALE_DETAIL
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.BD2UniverseProject.model.SaleDetail">
		insert into SALE_DETAIL (SALE_DETAIL_ID, PRICE, COST,
		QUANTITY, SALE_ID, PRODUCT_ID
		)
		values (#{SALE_DETAIL_ID,jdbcType=DECIMAL}, #{PRICE,jdbcType=DECIMAL},
		#{COST,jdbcType=DECIMAL},
		#{QUANTITY,jdbcType=DECIMAL}, #{SALE_ID,jdbcType=DECIMAL}, #{PRODUCT_ID,jdbcType=DECIMAL}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.BD2UniverseProject.model.SaleDetail">
		insert into SALE_DETAIL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="SALE_DETAIL_ID != null">
				SALE_DETAIL_ID,
			</if>
			<if test="PRICE != null">
				PRICE,
			</if>
			<if test="COST != null">
				COST,
			</if>
			<if test="QUANTITY != null">
				QUANTITY,
			</if>
			<if test="SALE_ID != null">
				SALE_ID,
			</if>
			<if test="PRODUCT_ID != null">
				PRODUCT_ID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="SALE_DETAIL_ID != null">
				#{SALE_DETAIL_ID,jdbcType=DECIMAL},
			</if>
			<if test="PRICE != null">
				#{PRICE,jdbcType=DECIMAL},
			</if>
			<if test="COST != null">
				#{COST,jdbcType=DECIMAL},
			</if>
			<if test="QUANTITY != null">
				#{QUANTITY,jdbcType=DECIMAL},
			</if>
			<if test="SALE_ID != null">
				#{SALE_ID,jdbcType=DECIMAL},
			</if>
			<if test="PRODUCT_ID != null">
				#{PRODUCT_ID,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.BD2UniverseProject.model.SaleDetailExample"
		resultType="java.lang.Integer">
		select count(*) from SALE_DETAIL
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update SALE_DETAIL
		<set>
			<if test="record.SALE_DETAIL_ID != null">
				SALE_DETAIL_ID = #{record.SALE_DETAIL_ID,jdbcType=DECIMAL},
			</if>
			<if test="record.PRICE != null">
				PRICE = #{record.PRICE,jdbcType=DECIMAL},
			</if>
			<if test="record.COST != null">
				COST = #{record.COST,jdbcType=DECIMAL},
			</if>
			<if test="record.QUANTITY != null">
				QUANTITY = #{record.QUANTITY,jdbcType=DECIMAL},
			</if> 
			<if test="record.SALE_ID != null">
				SALE_ID = #{record.SALE_ID,jdbcType=DECIMAL},
			</if>
			<if test="record.PRODUCT_ID != null">
				PRODUCT_ID = #{record.PRODUCT_ID,jdbcType=DECIMAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update SALE_DETAIL
		set SALE_DETAIL_ID = #{record.SALE_DETAIL_ID,jdbcType=DECIMAL},
		PRICE = #{record.PRICE,jdbcType=DECIMAL},
		COST = #{record.COST,jdbcType=DECIMAL},
		QUANTITY = #{record.QUANTITY,jdbcType=DECIMAL},
		SALE_ID = #{record.SALE_ID,jdbcType=DECIMAL},
		PRODUCT_ID = #{record.PRODUCT_ID,jdbcType=DECIMAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.BD2UniverseProject.model.SaleDetail">
		update SALE_DETAIL
		<set>
			<if test="PRICE != null">
				PRICE = #{PRICE,jdbcType=DECIMAL},
			</if>
			<if test="COST != null">
				COST = #{COST,jdbcType=DECIMAL},
			</if>
			<if test="QUANTITY != null">
				QUANTITY = #{QUANTITY,jdbcType=DECIMAL},
			</if>
			<if test="SALE_ID != null">
				SALE_ID = #{SALE_ID,jdbcType=DECIMAL},
			</if>
			<if test="PRODUCT_ID != null">
				PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL},
			</if>
		</set>
		where SALE_DETAIL_ID = #{SALE_DETAIL_ID,jdbcType=DECIMAL}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.BD2UniverseProject.model.SaleDetail">
		update SALE_DETAIL
		set PRICE = #{PRICE,jdbcType=DECIMAL},
		COST = #{COST,jdbcType=DECIMAL},
		QUANTITY = #{QUANTITY,jdbcType=DECIMAL},
		SALE_ID = #{SALE_ID,jdbcType=DECIMAL},
		PRODUCT_ID = #{PRODUCT_ID,jdbcType=DECIMAL}
		where SALE_DETAIL_ID = #{SALE_DETAIL_ID,jdbcType=DECIMAL}
	</update>
	
	<select id="selectDetailTableForSale" parameterType="java.util.Map" resultType="java.util.Map">
				select 
  		sl.SALE_DETAIL_ID, pr.PRODUCT_NAME ,pr.PRODUCT_CODE , sl.PRICE, sl.QUANTITY
	    from SALE_DETAIL sl
	    inner join PRODUCT pr on sl.PRODUCT_ID = pr.PRODUCT_ID
      WHERE  sl.SALE_ID = ${saleId}
	</select>
</mapper>